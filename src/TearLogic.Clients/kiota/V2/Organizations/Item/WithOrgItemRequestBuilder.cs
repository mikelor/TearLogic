// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using TearLogic.Clients.V2.Organizations.Item.Businessrelationships;
using TearLogic.Clients.V2.Organizations.Item.Commercialmaturityhistory;
using TearLogic.Clients.V2.Organizations.Item.Exitprobabilityhistory;
using TearLogic.Clients.V2.Organizations.Item.Financialtransactions;
using TearLogic.Clients.V2.Organizations.Item.Managementandboard;
using TearLogic.Clients.V2.Organizations.Item.Mosaichistory;
using TearLogic.Clients.V2.Organizations.Item.Outlook;
using TearLogic.Clients.V2.Organizations.Item.Scoutingreport;
using TearLogic.Clients.V2.Organizations.Item.Scoutingreportstream;
namespace TearLogic.Clients.V2.Organizations.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \v2\organizations\{orgId}
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithOrgItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The businessrelationships property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Businessrelationships.BusinessrelationshipsRequestBuilder Businessrelationships
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Businessrelationships.BusinessrelationshipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The commercialmaturityhistory property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Commercialmaturityhistory.CommercialmaturityhistoryRequestBuilder Commercialmaturityhistory
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Commercialmaturityhistory.CommercialmaturityhistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The exitprobabilityhistory property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Exitprobabilityhistory.ExitprobabilityhistoryRequestBuilder Exitprobabilityhistory
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Exitprobabilityhistory.ExitprobabilityhistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The financialtransactions property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Financialtransactions.FinancialtransactionsRequestBuilder Financialtransactions
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Financialtransactions.FinancialtransactionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The managementandboard property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Managementandboard.ManagementandboardRequestBuilder Managementandboard
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Managementandboard.ManagementandboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mosaichistory property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Mosaichistory.MosaichistoryRequestBuilder Mosaichistory
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Mosaichistory.MosaichistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The outlook property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Outlook.OutlookRequestBuilder Outlook
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Outlook.OutlookRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The scoutingreport property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Scoutingreport.ScoutingreportRequestBuilder Scoutingreport
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Scoutingreport.ScoutingreportRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The scoutingreportstream property</summary>
        public global::TearLogic.Clients.V2.Organizations.Item.Scoutingreportstream.ScoutingreportstreamRequestBuilder Scoutingreportstream
        {
            get => new global::TearLogic.Clients.V2.Organizations.Item.Scoutingreportstream.ScoutingreportstreamRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::TearLogic.Clients.V2.Organizations.Item.WithOrgItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithOrgItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/organizations/{orgId}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::TearLogic.Clients.V2.Organizations.Item.WithOrgItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithOrgItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/v2/organizations/{orgId}", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
