// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace TearLogic.Clients.Models.V2Outlook
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CurrentExitProbability : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Signals that are affecting the exit probability of the company.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::TearLogic.Clients.Models.V2Outlook.ExitSignal>? ExitSignals { get; set; }
#nullable restore
#else
        public List<global::TearLogic.Clients.Models.V2Outlook.ExitSignal> ExitSignals { get; set; }
#endif
        /// <summary>The exit probability of the company within the next 2 years via an IPO.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore? Ipo { get; set; }
#nullable restore
#else
        public global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore Ipo { get; set; }
#endif
        /// <summary>The exit probability of the company within the next 2 years via an M&amp;A.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore? Mna { get; set; }
#nullable restore
#else
        public global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore Mna { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::TearLogic.Clients.Models.V2Outlook.CurrentExitProbability"/> and sets the default values.
        /// </summary>
        public CurrentExitProbability()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::TearLogic.Clients.Models.V2Outlook.CurrentExitProbability"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::TearLogic.Clients.Models.V2Outlook.CurrentExitProbability CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::TearLogic.Clients.Models.V2Outlook.CurrentExitProbability();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "exitSignals", n => { ExitSignals = n.GetCollectionOfObjectValues<global::TearLogic.Clients.Models.V2Outlook.ExitSignal>(global::TearLogic.Clients.Models.V2Outlook.ExitSignal.CreateFromDiscriminatorValue)?.AsList(); } },
                { "ipo", n => { Ipo = n.GetObjectValue<global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore>(global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore.CreateFromDiscriminatorValue); } },
                { "mna", n => { Mna = n.GetObjectValue<global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore>(global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::TearLogic.Clients.Models.V2Outlook.ExitSignal>("exitSignals", ExitSignals);
            writer.WriteObjectValue<global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore>("ipo", Ipo);
            writer.WriteObjectValue<global::TearLogic.Clients.Models.V2Outlook.ExitProbabilityScore>("mna", Mna);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
